// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Project Configuration
const admin = require('firebase-admin');

console.log('=== FIREBASE PROJECT CHECK ===\n');

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ service account ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
try {
  const serviceAccount = require('./functions/oskconnectdb-firebase-adminsdk.json');
  console.log('‚úÖ Service Account Key ‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
  console.log(`   Project ID: ${serviceAccount.project_id}`);
  console.log(`   Client Email: ${serviceAccount.client_email}`);
  
  // Initialize Firebase Admin
  if (!admin.apps.length) {
    admin.initializeApp({
      credential: admin.credential.cert(serviceAccount),
      projectId: serviceAccount.project_id
    });
  }
  
  console.log('\n=== TESTING FIREBASE ACCESS ===');
  
  // Test Firestore access
  const db = admin.firestore();
  db.collection('stores').get().then((snapshot) => {
    console.log(`‚úÖ Firestore Access: ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
    console.log(`   ‡∏û‡∏ö ${snapshot.size} ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤`);
    
    if (snapshot.size > 0) {
      snapshot.forEach((doc) => {
        const data = doc.data();
        console.log(`   - ${data.shopName || data.name}: ${data.status}`);
      });
    }
  }).catch((error) => {
    console.log(`‚ùå Firestore Access: ${error.message}`);
  });
  
} catch (error) {
  console.log('‚ùå Service Account Key ‡πÑ‡∏°‡πà‡∏û‡∏ö:', error.message);
  console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
  console.log('1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Firebase Console > Project Settings > Service Accounts');
  console.log('2. ‡∏Ñ‡∏•‡∏¥‡∏Å "Generate new private key"');
  console.log('3. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô functions/oskconnectdb-firebase-adminsdk.json');
}
